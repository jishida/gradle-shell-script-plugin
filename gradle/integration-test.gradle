sourceSets {
    integrationTest { sourceSet ->
        ['java', 'groovy', 'resources']
                .findAll { sourceSet.hasProperty(it) }
                .each { sourceSet."$it".srcDir file("src/integrationTest/$it") }
    }
}

dependencies {
    integrationTestCompile sourceSets.main.output
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testCompile
    integrationTestRuntime configurations.testRuntime
}

task prepareIntegrationTest {
    final scriptFile = new File(buildDir, "tmp/${project.group}/${project.name}/integration-test-deps.gradle")

    inputs.files sourceSets.main.compileClasspath
    outputs.file scriptFile

    doLast {
        final dependenciesLines = sourceSets.main.compileClasspath.collect {
            final path = it.canonicalPath.replace('\\', '\\\\').replace('\'', '\\\'')
            """
            classpath files('${path}')"""
        }.join('')

        scriptFile.delete()
        scriptFile.parentFile.mkdirs()
        scriptFile << """\
        dependencies {${dependenciesLines}
        }
        """.stripIndent()
    }
}

task integrationTest(type: Test, dependsOn: jar) {
    group = 'verification'
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    maxParallelForks = 1
}

check.dependsOn integrationTest
integrationTest.dependsOn prepareIntegrationTest